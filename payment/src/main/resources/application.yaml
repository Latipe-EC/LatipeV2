spring:
  application:
    name: payment-service
  data:
    mongodb:
      uri: ${SPRING_DATA_MONGODB_URI:mongodb://localhost:27017/Latipe-Payment-DB}
  rabbitmq:
    port: ${RABBIT_MQ_PORT:5672}
    host: ${RABBIT_MQ_HOST:localhost}

loki:
  url: ${LOKI_URL:http://localhost:3100/loki/api/v1/push}

context:
  initializer:
    classes: latipe.payment.configs.PortInitializer

service:
  auth: ${AUTH_SERVICE:auth-service}
  user: ${USER_SERVICE:user-service}
  store: ${STORE_SERVICE:store-service}

gate-way:
  host: ${GATE_WAY_HOST:http://localhost}
  port: ${GATE_WAY_PORT:8181}

server:
  port: ${PAYMENT_PORT:8381}
#  servlet:
#    context-path: /api/v1
management:
  endpoints:
    web:
      exposure:
        include: prometheus, health
  endpoint:
    health:
      show-details: always
  tracing:
    sampling:
      probability: '1.0'
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
    tags:
      application: ${spring.application.name}
    otlp:
      tracing:
        endpoint: http://localhost:4318/v1/traces
    tracing:
      sampling:
        probability: 1.0

logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
eureka:
  client:
    enabled: ${EUREKA_ENABLED:true}
    serviceUrl:
      defaultZone: http://eureka:password@${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka
springdoc:
  packagesToScan: latipe.payment

rabbitmq:
  email:
    payment-withdraw-topic:
      routing:
        key: email.payment.withdraw
    exchange:
      name: email_topic_exchange
  routing:
    key: order_created_key
  exchange:
    name: order_exchange
  queue:
    name: internal.payment
  order:
    exchange: order_transaction_ex
    commit: order.payment.event
    rollback: order.payment.rollback
    reply: product.payment.reply
    queue-commit: internal.order.update
    queue-rollback: internal.order.rollback

expiration:
  withdraw-exps: 900

encryption:
  key: Jf57xtfgC5X9tktm
secure-internal:
  public-key: "MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKl5SroD9NuxQ955qCcCMERMAMJz2/CZfx3WTHkQa8cvf13FBkRFvRkLD7U1MRCNylxe+oebmy/OF4GzuSxcDl8CAwEAAQ=="
  private-key: "MIIBUwIBADANBgkqhkiG9w0BAQEFAASCAT0wggE5AgEAAkEAqXlKugP027FD3nmoJwIwREwAwnPb8Jl/HdZMeRBrxy9/XcUGREW9GQsPtTUxEI3KXF76h5ubL84XgbO5LFwOXwIDAQABAkB7y8dDZFp8FNwv6oxjmlyptx8i7EEwWuAZao5ILS+duqnmZLLdSVpTF/tc58bFoBsZyWFru6sxmommxDipxwMBAiEA5FhOxbJeo8zn4OyASEzBuzWNv2QpEX7hpn5H9wlTVoECIQC9/7iLKBzB7YiS6+tKHRROHQt9n4OMcDGau5gfxXG03wIgRmGRpg3cbdByiDldMOu3quRO1Hci0WmyU4cI13PgZAECIEMMNbxtqFBLGXH3bO2Xe23hVAe9vbdWdDrNTm6Px4NzAiBjaQjKKLaSlP24wdaYe0cQxWuC0UlwAu5vHk0twRzV/g=="
