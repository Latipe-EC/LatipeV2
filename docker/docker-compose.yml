services:
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
  #    restart: always

  grafana:
    image: grafana/grafana-enterprise
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    container_name: grafana
    restart: unless-stopped
    ports:
      - '4040:3000'

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: 123123@Dat
      MYSQL_DATABASE: backend_orders_service
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password

  rabbitmq:
    image: rabbitmq:3.12-management
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  loki:
    image: grafana/loki:2.7.4
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"                                   # loki needs to be exposed so it receives logs
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1

  tempo:
    image: grafana/tempo:main-0c1eb27
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo/tempo.yaml:/etc/tempo.yaml:ro
      - ./tempo-data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "9411:9411" # zipkin
      - "4317:4317" # otlp grpc ingest
      - "4318:4318" # otlp http ingest

  elastic-search:
    image: 0353486363/latipe-elastic-search-vietnamese:latest
    restart: on-failure
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      memlock:
        hard: -1
        soft: -1
    environment:
      ES_JAVA_OPTS: "-Xmx2g -Xms2g"
      bootstrap.memory_lock: "true"
      discovery.type: "single-node"
      xpack.security.enabled: "false"
    ports:
      - "9200:9200"
  #  elasticsearch:
  #    image: elasticsearch:8.9.2
  #    ports:
  #      - "9200:9200"
  #    environment:
  #      - discovery.type=single-node
  #      - xpack.security.enabled=false
  #      - ES_JAVA_OPTS=-Xms2g -Xmx8g
  #
  kibana:
    image: kibana:8.7.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    command: >
      bash -c "chown -R kibana:kibana /usr/share/kibana/config/kibana.yml && /usr/local/bin/kibana-docker"

