management:
  endpoints:
    web:
      exposure:
        include: prometheus, health
  endpoint:
    health:
      show-details: always
  tracing:
    sampling:
      probability: "1.0"
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: "true"

elasticsearch:
  clustername: docker-cluster
  url: ${URL_ELASTIC:localhost:9200}
  username: ${USERNAME_ELASTIC:elastic}
  password: ${PASSWORD_ELASTIC:vd8ChXIOvBm4Pno}

spring:
  application:
    name: search-service
  rabbitmq:
    port: ${RABBIT_MQ_PORT:5672}
    host: ${RABBIT_MQ_HOST:localhost}

context:
  initializer:
    classes: latipe.search.configs.PortInitializer

service:
  product: ${PRODUCT_SERVICE:product-service}
  auth: ${AUTH_SERVICE:auth-service}

gate-way:
  host: ${GATE_WAY_HOST:http://localhost}
  port: ${GATE_WAY_PORT:8181}

rabbitmq:
  routing:
    key: dbproduct_routing_key
  exchange:
    name: dbproduct_exchange
  queue:
    name: dbproduct.public.product

eureka:
  client:
    enabled: true
    serviceUrl:
      defaultZone: http://${EUREKA_USER:user}:${EUREKA_PASSWORD:password}@${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka
springdoc:
  packagesToScan: latipe.search

server:
  port: ${SEARCH_PORT:8092}
logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
